#!/bin/bash

#!/bin/bash

# Validate the number of arguments
if [[ $# -ne 1 ]]
then
    echo "ERROR: This script requires exactly one .tsv file as an argument." > /dev/stderr
    exit 3
fi

# Validate file extension is .tsv
if [[ $1 != *.tsv ]]
then
    echo "ERROR: The input file must have a .tsv extension." > /dev/stderr
    exit 4
fi

# Validate file exists and is readable
if [[ ! -f "$1" ]]
then
    echo "ERROR: The specified file '$1' does not exist." > /dev/stderr
    exit 1
fi

if [[ ! -r "$1" ]]
then
    echo "ERROR: The specified file '$1' is not readable." > /dev/stderr
    exit 2
fi

input_file="$1"

# Find most common value in a column
find_most_common() {
    local col=$1
    local label=$2

    cut -f"$col" "$input_file" | tail -n +2 | \
        tr ',' '\n' | \
        sed 's/^[ \t]*//; s/[ \t]*$//' | \
        grep -v '^$' | \
        sort | uniq -c | sort -nr | head -1 | \
        sed -E "s/^[[:space:]]*([0-9]+)[[:space:]]+(.*)/The most $label is \2 found in \1 games/"
}

# Calculate Pearson correlation
calculate_correlation() {
    local x_col=$1
    local y_col=$2
    local desc="$3"

    paste <(cut -f"$x_col" "$input_file" | tail -n +2) <(cut -f"$y_col" "$input_file" | tail -n +2) | \
    grep -vE '^\s*$' | \
    awk '
    {
        x=$1; y=$2;
        if(x ~ /^[0-9.]+$/ && y ~ /^[0-9.]+$/) {
            sum_x += x;
            sum_y += y;
            sum_x2 += x*x;
            sum_y2 += y*y;
            sum_xy += x*y;
            n++;
        }
    }
    END {
        if(n < 2) {
            print "The correlation between " desc " is undefined (insufficient data)";
            exit;
        }
        numerator = n * sum_xy - sum_x * sum_y;
        denom1 = sqrt(n * sum_x2 - sum_x * sum_x);
        denom2 = sqrt(n * sum_y2 - sum_y * sum_y);
        if(denom1 == 0 || denom2 == 0) {
            print "The correlation between " desc " is undefined";
        } else {
            corr = numerator / (denom1 * denom2);
            printf("The correlation between %s is %.3f\n", desc, corr);
        }
    }' desc="$desc"
}

### MAIN OUTPUT

# 1. Most popular mechanics
find_most_common 13 "popular game mechanics"

# 2. Most common domain
find_most_common 14 "game domain"

echo ""

# 3. Correlation: Year Published vs Rating Average
calculate_correlation 3 9 "the year of publication and the average rating"

# 4. Correlation: Complexity Average vs Rating Average
calculate_correlation 11 9 "the complexity of a game and its average rating"

